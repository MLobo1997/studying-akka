akka {
    loglevel = INFO
}

mySpecialConfig {
    akka {
        loglevel = INFO
    }
}

#timed assertions test config
specialTimedAssertionsConfig {
    akka.test.single-expect-default = 0.3s
}

interceptingLogMessages {
    akka {
        loggers = ["akka.testkit.TestEventListener"]
        test {
            filter-leeway = 5s
        }
    }
}

routersDemo {
    akka {
        actor.deployment {
            /poolMaster2 {
                router = round-robin-pool
                nr-of-instances = 5
            }

            /groupMaster2 {
                router = round-robin-group
                routees.paths = ["/user/slave_1", "/user/slave_2", "/user/slave_3", "/user/slave_4", "/user/slave_5"]
            }
        }
    }
}

my-dispatcher {
    type = Dispatcher #Pinned dispatcher, CallingThreadDispatcher.
    executor = "thread-pool-executor"
    thread-pool-executor {
        fixed-pool-size = 3
    }
    throughput = 30
}

throughput = 30 messages are processed by that actor before the thread moves on to another actor

dispatchersDemo {
    akka.actor.deployment {
        /rtjvm {
            dispatcher = my-dispatcher
        }
    }
}



mailboxesDemo {
    support-ticket-dispatcher {
        mailbox-type = "part5infra.Mailboxes$SupportTicketPriorityMailbox"
    }
    control-mailbox {
        mailbox-type = "akka.dispatch.UnboundedControlAwareMailbox"
    }
    akka.actor.deployment {
        /alternativeControlAwareActor {
            mailbox = control-mailbox
        }
    {
}